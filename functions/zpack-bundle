#!/usr/bin/env zsh

function __zpack_bundle_omz-lib() {
    zpack omz lib/git.zsh
    zpack omz lib/history.zsh
    zpack omz lib/directories.zsh
    zpack omz lib/completion.zsh --after-load '
        # [Ctrl-Backspace] - delete whole backward-word
        bindkey -M emacs "^H" backward-kill-word
        bindkey -M viins "^H" backward-kill-word
        bindkey -M vicmd "^H" backward-kill-word
    '
    zpack omz lib/vcs_info.zsh
    zpack omz lib/prompt_info_functions.zsh
    zpack omz lib/key-bindings.zsh
    zpack omz lib/theme-and-appearance.zsh
}

function __zpack_bundle_fzf() {
    local preview
    zparseopts -D -E -preview=preview || return 1

    zpack release junegunn/fzf $@
    zpack snippet https://github.com/junegunn/fzf/raw/master/shell/key-bindings.zsh
    zpack snippet https://github.com/junegunn/fzf/raw/master/shell/completion.zsh

    FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --prompt='∼ ' --pointer='▶' --marker='✓'"
    if [[ -n $catppuccin ]]; then
        FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS \
            --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
            --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
            --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
        "
    fi

    if [[ -n $preview ]]; then
        local cat_cmd="cat"
        local tree_cmd="ls -l"

        [[ $+commands[bat] == 1 ]] && cat_cmd="bat -n --color=always"
        [[ $+commands[tree] == 1 ]] && tree_cmd="tree"
        [[ $+commands[exa] == 1 ]] && tree_cmd="exa --tree --icons"

        FZF_CTRL_T_OPTS="$FZF_CTRL_T_OPTS --height 80% --preview '{ [[ -f {} ]] && $cat_cmd {} } || { [[ -d {} ]] && $tree_cmd {} }'"
        FZF_ALT_C_OPTS="$FZF_ALT_C_OPTS $FZF_CTRL_T_OPTS"
    fi

    __zpack_cache_var FZF_DEFAULT_OPTS
    __zpack_cache_var FZF_CTRL_T_OPTS
    __zpack_cache_var FZF_ALT_C_OPTS
}

function __zpack_bundle_bat() {
    zpack release sharkdp/bat $@

    # Also follow instructions from https://github.com/catppuccin/bat
    [[ -n $catppuccin ]] && {
        export BAT_THEME="Catppuccin-mocha"
        __zpack_cache "export BAT_THEME=\"Catppuccin-mocha\""
    }
}

function __zpack_bundle_exa() {
    zpack release ogham/exa $@
    zpack snippet https://github.com/ogham/exa/raw/master/completions/zsh/_exa
}

function __zpack_bundle_plow() {
    zpack release six-ddc/plow $@
    function plow() {
        unfunction plow
        eval "$(plow --completion-script-zsh)"
        plow $@
    }
    __zpack_cache_func plow
}

function __zpack_bundle_zsh-users() {
    zpack load zsh-users/zsh-autosuggestions
    zpack load zsh-users/zsh-completions

    [[ -n $catppuccin ]] && zpack snippet https://github.com/catppuccin/zsh-syntax-highlighting/raw/main/themes/catppuccin_mocha-zsh-syntax-highlighting.zsh
    zpack load zsh-users/zsh-syntax-highlighting

    zpack load zsh-users/zsh-history-substring-search --after-load '
        bindkey "$terminfo[kcuu1]" history-substring-search-up
        bindkey "$terminfo[kcud1]" history-substring-search-down
    '
}

function __zpack_bundle_powerlevel10k() {
    zpack load romkatv/powerlevel10k powerlevel10k --after-load '
        [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
    '
}


function zpack-bundle() {
    local catppuccin
    zparseopts -D -E -catppuccin=catppuccin || return 1

    if [[ $# == 0 ]]; then
        __zpack_out_plain "Available bundles:"
        local fun
        for fun in $(typeset -f +); do
            [[ $fun = __zpack_bundle_* ]] && __zpack_out_plain "    ${fun#__zpack_bundle_}"
        done
        return
    fi

    local bundle=$1

    if [[ ${+functions[__zpack_bundle_$bundle]} == 0 ]]; then
        __zpack_err "Bundle does not exist. Run 'zpack bundle' to see available bundles."
        return 1
    fi

    shift
    __zpack_bundle_$bundle $@
    ZPACK_BUNDLES+=($bundle)
}

zpack-bundle $@
